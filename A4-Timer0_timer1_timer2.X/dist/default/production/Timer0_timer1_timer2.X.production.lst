

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 21 17:27:30 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0000                     	;# 
   233     0001                     	;# 
   234     0002                     	;# 
   235     0003                     	;# 
   236     0004                     	;# 
   237     0005                     	;# 
   238     0006                     	;# 
   239     0007                     	;# 
   240     0008                     	;# 
   241     0009                     	;# 
   242     000A                     	;# 
   243     000B                     	;# 
   244     000C                     	;# 
   245     000D                     	;# 
   246     000E                     	;# 
   247     000E                     	;# 
   248     000F                     	;# 
   249     0010                     	;# 
   250     0011                     	;# 
   251     0012                     	;# 
   252     0013                     	;# 
   253     0014                     	;# 
   254     0015                     	;# 
   255     0015                     	;# 
   256     0016                     	;# 
   257     0017                     	;# 
   258     0018                     	;# 
   259     0019                     	;# 
   260     001A                     	;# 
   261     001B                     	;# 
   262     001B                     	;# 
   263     001C                     	;# 
   264     001D                     	;# 
   265     001E                     	;# 
   266     001F                     	;# 
   267     0081                     	;# 
   268     0085                     	;# 
   269     0086                     	;# 
   270     0087                     	;# 
   271     0088                     	;# 
   272     0089                     	;# 
   273     008C                     	;# 
   274     008D                     	;# 
   275     008E                     	;# 
   276     0091                     	;# 
   277     0092                     	;# 
   278     0093                     	;# 
   279     0094                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009C                     	;# 
   283     009D                     	;# 
   284     009E                     	;# 
   285     009F                     	;# 
   286     010C                     	;# 
   287     010D                     	;# 
   288     010E                     	;# 
   289     010F                     	;# 
   290     018C                     	;# 
   291     018D                     	;# 
   292     000E                     _TMR1L	set	14
   293     000F                     _TMR1H	set	15
   294     0001                     _TMR0	set	1
   295     0008                     _PORTD	set	8
   296     0042                     _RD2	set	66
   297     0061                     _TMR2IF	set	97
   298     0041                     _RD1	set	65
   299     0060                     _TMR1IF	set	96
   300     0040                     _RD0	set	64
   301     005A                     _TMR0IF	set	90
   302     0092                     _TMR2ON	set	146
   303     0091                     _T2CKPS1	set	145
   304     0090                     _T2CKPS0	set	144
   305     0080                     _TMR1ON	set	128
   306     0081                     _TMR1CS	set	129
   307     0084                     _T1CKPS0	set	132
   308     0085                     _T1CKPS1	set	133
   309     005D                     _TMR0IE	set	93
   310     005F                     _GIE	set	95
   311     005E                     _PEIE	set	94
   312     0092                     _PR2	set	146
   313     0088                     _TRISD	set	136
   314     0461                     _TMR2IE	set	1121
   315     0460                     _TMR1IE	set	1120
   316     040B                     _PSA	set	1035
   317     040D                     _T0CS	set	1037
   318                           
   319                           	psect	cinit
   320     000F                     start_initialization:	
   321                           ; #config settings
   322                           
   323     000F                     __initialization:
   324                           
   325                           ; Clear objects allocated to COMMON
   326     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   327     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   328     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   329     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   330     0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   331     0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   332     0015                     end_of_initialization:	
   333                           ;End of C runtime variable initialization code
   334                           
   335     0015                     __end_of__initialization:
   336     0015  0183               	clrf	3
   337     0016  120A  118A  28B4   	ljmp	_main	;jump to C main() function
   338                           
   339                           	psect	bssCOMMON
   340     0070                     __pbssCOMMON:
   341     0070                     isr@count2:
   342     0070                     	ds	2
   343     0072                     isr@count1:
   344     0072                     	ds	2
   345     0074                     isr@count0:
   346     0074                     	ds	2
   347                           
   348                           	psect	cstackCOMMON
   349     0076                     __pcstackCOMMON:
   350     0076                     ?_init_timer0:
   351     0076                     ?_init_timer1:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0076                     ?_init_timer2:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0076                     ?_init_config:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0076                     ?_main:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0076                     ?_isr:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0076                     ??_isr:	
   367                           ; 1 bytes @ 0x0
   368                           
   369                           
   370                           ; 1 bytes @ 0x0
   371     0076                     	ds	2
   372     0078                     ??_init_timer0:
   373     0078                     ??_init_timer1:	
   374                           ; 1 bytes @ 0x2
   375                           
   376     0078                     ??_init_timer2:	
   377                           ; 1 bytes @ 0x2
   378                           
   379     0078                     ??_init_config:	
   380                           ; 1 bytes @ 0x2
   381                           
   382     0078                     ??_main:	
   383                           ; 1 bytes @ 0x2
   384                           
   385                           
   386                           	psect	maintext
   387     00B4                     __pmaintext:	
   388                           ; 1 bytes @ 0x2
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 32 in file "main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0
   411 ;;      Totals:         0       0       0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels required when called: 3
   414 ;; This function calls:
   415 ;;		_init_config
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421     00B4                     _main:	
   422                           ;psect for function _main
   423                           
   424     00B4                     l681:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   427                           
   428     00B4  120A  118A  2075  120A  118A  	fcall	_init_config
   429     00B9                     l22:
   430     00B9                     l23:
   431     00B9  28B9               	goto	l22
   432     00BA  120A  118A  280C   	ljmp	start
   433     00BD                     __end_of_main:
   434                           
   435                           	psect	text1
   436     0075                     __ptext1:	
   437 ;; *************** function _init_config *****************
   438 ;; Defined at:
   439 ;;		line 16 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 2
   460 ;; This function calls:
   461 ;;		_init_timer0
   462 ;;		_init_timer1
   463 ;;		_init_timer2
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469     0075                     _init_config:	
   470                           ;psect for function _init_config
   471                           
   472     0075                     l669:	
   473                           ;incstack = 0
   474                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   475                           
   476                           
   477                           ;main.c: 18:     init_config();
   478     0075  1283               	bcf	3,5	;RP0=0, select bank0
   479     0076  1303               	bcf	3,6	;RP1=0, select bank0
   480     0077  0188               	clrf	8	;volatile
   481                           
   482                           ;main.c: 19:     while(1)
   483     0078  1683               	bsf	3,5	;RP0=1, select bank1
   484     0079  1303               	bcf	3,6	;RP1=0, select bank1
   485     007A  0188               	clrf	8	;volatile
   486     007B                     l671:
   487                           
   488                           ;main.c: 21:         ;
   489     007B  120A  118A  20AA  120A  118A  	fcall	_init_timer0
   490     0080                     l673:
   491                           
   492                           ;main.c: 22:     }
   493     0080  120A  118A  208D  120A  118A  	fcall	_init_timer1
   494     0085                     l675:
   495                           
   496                           ;main.c: 23:     return;
   497     0085  120A  118A  209D  120A  118A  	fcall	_init_timer2
   498     008A                     l677:
   499     008A  170B               	bsf	11,6	;volatile
   500     008B                     l679:
   501     008B  178B               	bsf	11,7	;volatile
   502     008C                     l17:
   503     008C  0008               	return
   504     008D                     __end_of_init_config:
   505                           
   506                           	psect	text2
   507     009D                     __ptext2:	
   508 ;; *************** function _init_timer2 *****************
   509 ;; Defined at:
   510 ;;		line 38 in file "timers.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; Hardware stack levels required when called: 1
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		_init_config
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538     009D                     _init_timer2:	
   539                           ;psect for function _init_timer2
   540                           
   541     009D                     l663:	
   542                           ;incstack = 0
   543                           ; Regs used in _init_timer2: [wreg]
   544                           
   545                           
   546                           ;timers.c: 41:     T2CKPS0 = 1;
   547     009D  1283               	bcf	3,5	;RP0=0, select bank0
   548     009E  1303               	bcf	3,6	;RP1=0, select bank0
   549     009F  1412               	bsf	18,0	;volatile
   550                           
   551                           ;timers.c: 42:     T2CKPS1 = 1;
   552     00A0  1492               	bsf	18,1	;volatile
   553                           
   554                           ;timers.c: 45:     TMR2IE = 1;
   555     00A1  1683               	bsf	3,5	;RP0=1, select bank1
   556     00A2  1303               	bcf	3,6	;RP1=0, select bank1
   557     00A3  148C               	bsf	12,1	;volatile
   558     00A4                     l665:
   559                           
   560                           ;timers.c: 48:     PR2 = 250;
   561     00A4  30FA               	movlw	250
   562     00A5  0092               	movwf	18	;volatile
   563     00A6                     l667:
   564                           
   565                           ;timers.c: 51:     TMR2ON = 1;
   566     00A6  1283               	bcf	3,5	;RP0=0, select bank0
   567     00A7  1303               	bcf	3,6	;RP1=0, select bank0
   568     00A8  1512               	bsf	18,2	;volatile
   569     00A9                     l66:
   570     00A9  0008               	return
   571     00AA                     __end_of_init_timer2:
   572                           
   573                           	psect	text3
   574     008D                     __ptext3:	
   575 ;; *************** function _init_timer1 *****************
   576 ;; Defined at:
   577 ;;		line 18 in file "timers.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; Hardware stack levels required when called: 1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_init_config
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605     008D                     _init_timer1:	
   606                           ;psect for function _init_timer1
   607                           
   608     008D                     l653:	
   609                           ;incstack = 0
   610                           ; Regs used in _init_timer1: [wreg]
   611                           
   612                           
   613                           ;timers.c: 22:     T1CKPS1 = 1;
   614     008D  1283               	bcf	3,5	;RP0=0, select bank0
   615     008E  1303               	bcf	3,6	;RP1=0, select bank0
   616     008F  1690               	bsf	16,5	;volatile
   617                           
   618                           ;timers.c: 23:     T1CKPS0 = 1;
   619     0090  1610               	bsf	16,4	;volatile
   620     0091                     l655:
   621                           
   622                           ;timers.c: 26:     TMR1H = 0xFE;
   623     0091  30FE               	movlw	254
   624     0092  008F               	movwf	15	;volatile
   625                           
   626                           ;timers.c: 27:     TMR1L = 0x0C;
   627     0093  300C               	movlw	12
   628     0094  008E               	movwf	14	;volatile
   629     0095                     l657:
   630                           
   631                           ;timers.c: 30:     TMR1CS = 0;
   632     0095  1090               	bcf	16,1	;volatile
   633     0096                     l659:
   634                           
   635                           ;timers.c: 33:     TMR1IE = 1;
   636     0096  1683               	bsf	3,5	;RP0=1, select bank1
   637     0097  1303               	bcf	3,6	;RP1=0, select bank1
   638     0098  140C               	bsf	12,0	;volatile
   639     0099                     l661:
   640                           
   641                           ;timers.c: 36:     TMR1ON = 1;
   642     0099  1283               	bcf	3,5	;RP0=0, select bank0
   643     009A  1303               	bcf	3,6	;RP1=0, select bank0
   644     009B  1410               	bsf	16,0	;volatile
   645     009C                     l63:
   646     009C  0008               	return
   647     009D                     __end_of_init_timer1:
   648                           
   649                           	psect	text4
   650     00AA                     __ptext4:	
   651 ;; *************** function _init_timer0 *****************
   652 ;; Defined at:
   653 ;;		line 4 in file "timers.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; Hardware stack levels required when called: 1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_init_config
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681     00AA                     _init_timer0:	
   682                           ;psect for function _init_timer0
   683                           
   684     00AA                     l647:	
   685                           ;incstack = 0
   686                           ; Regs used in _init_timer0: [wreg]
   687                           
   688                           
   689                           ;timers.c: 7:     T0CS = 0;
   690     00AA  1683               	bsf	3,5	;RP0=1, select bank1
   691     00AB  1303               	bcf	3,6	;RP1=0, select bank1
   692     00AC  1281               	bcf	1,5	;volatile
   693                           
   694                           ;timers.c: 10:     PSA = 1;
   695     00AD  1581               	bsf	1,3	;volatile
   696     00AE                     l649:
   697                           
   698                           ;timers.c: 12:     TMR0 = 6;
   699     00AE  3006               	movlw	6
   700     00AF  1283               	bcf	3,5	;RP0=0, select bank0
   701     00B0  1303               	bcf	3,6	;RP1=0, select bank0
   702     00B1  0081               	movwf	1	;volatile
   703     00B2                     l651:
   704                           
   705                           ;timers.c: 15:     TMR0IE = 1;
   706     00B2  168B               	bsf	11,5	;volatile
   707     00B3                     l60:
   708     00B3  0008               	return
   709     00B4                     __end_of_init_timer0:
   710                           
   711                           	psect	text5
   712     0019                     __ptext5:	
   713 ;; *************** function _isr *****************
   714 ;; Defined at:
   715 ;;		line 4 in file "isr.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          2       0       0       0       0
   732 ;;      Totals:         2       0       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		Interrupt level 1
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742     0019                     _isr:	
   743                           ;psect for function _isr
   744                           
   745     0019                     i1l683:
   746                           
   747                           ;isr.c: 6:     static unsigned int count0 = 0;;isr.c: 7:     static unsigned int count1 
      +                          = 0;;isr.c: 8:     static unsigned int count2 = 0;;isr.c: 9:     if(TMR0IF == 1)
   748     0019  1D0B               	btfss	11,2	;volatile
   749     001A  281C               	goto	u1_21
   750     001B  281D               	goto	u1_20
   751     001C                     u1_21:
   752     001C  2837               	goto	i1l95
   753     001D                     u1_20:
   754     001D                     i1l685:
   755                           
   756                           ;isr.c: 10:     {;isr.c: 11:         TMR0 = TMR0 + 6 + 2;
   757     001D  1283               	bcf	3,5	;RP0=0, select bank0
   758     001E  1303               	bcf	3,6	;RP1=0, select bank0
   759     001F  0801               	movf	1,w	;volatile
   760     0020  3E08               	addlw	8
   761     0021  0081               	movwf	1	;volatile
   762                           
   763                           ;isr.c: 12:         if(++count0 == 20000)
   764     0022  3001               	movlw	1
   765     0023  07F4               	addwf	isr@count0,f
   766     0024  1803               	skipnc
   767     0025  0AF5               	incf	isr@count0+1,f
   768     0026  3000               	movlw	0
   769     0027  07F5               	addwf	isr@count0+1,f
   770     0028  3020               	movlw	32
   771     0029  0674               	xorwf	isr@count0,w
   772     002A  304E               	movlw	78
   773     002B  1903               	skipnz
   774     002C  0675               	xorwf	isr@count0+1,w
   775     002D  1D03               	btfss	3,2
   776     002E  2830               	goto	u2_21
   777     002F  2831               	goto	u2_20
   778     0030                     u2_21:
   779     0030  2835               	goto	i1l691
   780     0031                     u2_20:
   781     0031                     i1l687:
   782                           
   783                           ;isr.c: 13:         {;isr.c: 14:             count0 = 0;
   784     0031  01F4               	clrf	isr@count0
   785     0032  01F5               	clrf	isr@count0+1
   786     0033                     i1l689:
   787                           
   788                           ;isr.c: 15:             RD0 = !RD0;
   789     0033  3001               	movlw	1
   790     0034  0688               	xorwf	8,f
   791     0035                     i1l691:
   792                           
   793                           ;isr.c: 17:         TMR0IF = 0;
   794     0035  110B               	bcf	11,2	;volatile
   795                           
   796                           ;isr.c: 18:     }
   797     0036  286E               	goto	i1l103
   798     0037                     i1l95:	
   799                           ;isr.c: 19:     else if(TMR1IF == 1)
   800                           
   801     0037  1283               	bcf	3,5	;RP0=0, select bank0
   802     0038  1303               	bcf	3,6	;RP1=0, select bank0
   803     0039  1C0C               	btfss	12,0	;volatile
   804     003A  283C               	goto	u3_21
   805     003B  283D               	goto	u3_20
   806     003C                     u3_21:
   807     003C  2856               	goto	i1l98
   808     003D                     u3_20:
   809     003D                     i1l693:
   810                           
   811                           ;isr.c: 20:     {;isr.c: 22:         TMR1H = 0xFE;
   812     003D  30FE               	movlw	254
   813     003E  008F               	movwf	15	;volatile
   814                           
   815                           ;isr.c: 23:         TMR1L = 0x0C;
   816     003F  300C               	movlw	12
   817     0040  008E               	movwf	14	;volatile
   818     0041                     i1l695:
   819                           
   820                           ;isr.c: 24:         if(count1++ == 1240)
   821     0041  3001               	movlw	1
   822     0042  07F2               	addwf	isr@count1,f
   823     0043  1803               	skipnc
   824     0044  0AF3               	incf	isr@count1+1,f
   825     0045  3000               	movlw	0
   826     0046  07F3               	addwf	isr@count1+1,f
   827     0047  30D9               	movlw	217
   828     0048  0672               	xorwf	isr@count1,w
   829     0049  3004               	movlw	4
   830     004A  1903               	skipnz
   831     004B  0673               	xorwf	isr@count1+1,w
   832     004C  1D03               	btfss	3,2
   833     004D  284F               	goto	u4_21
   834     004E  2850               	goto	u4_20
   835     004F                     u4_21:
   836     004F  2854               	goto	i1l701
   837     0050                     u4_20:
   838     0050                     i1l697:
   839                           
   840                           ;isr.c: 25:         {;isr.c: 26:             count1 = 0;
   841     0050  01F2               	clrf	isr@count1
   842     0051  01F3               	clrf	isr@count1+1
   843     0052                     i1l699:
   844                           
   845                           ;isr.c: 27:             RD1 = !RD1;
   846     0052  3002               	movlw	2
   847     0053  0688               	xorwf	8,f
   848     0054                     i1l701:
   849                           
   850                           ;isr.c: 29:         TMR1IF = 0;
   851     0054  100C               	bcf	12,0	;volatile
   852                           
   853                           ;isr.c: 30:     }
   854     0055  286E               	goto	i1l103
   855     0056                     i1l98:	
   856                           ;isr.c: 31:     else if(TMR2IF == 1)
   857                           
   858     0056  1C8C               	btfss	12,1	;volatile
   859     0057  2859               	goto	u5_21
   860     0058  285A               	goto	u5_20
   861     0059                     u5_21:
   862     0059  286E               	goto	i1l103
   863     005A                     u5_20:
   864     005A                     i1l703:
   865                           
   866                           ;isr.c: 32:     {;isr.c: 33:         if(++count2 == 1250)
   867     005A  3001               	movlw	1
   868     005B  07F0               	addwf	isr@count2,f
   869     005C  1803               	skipnc
   870     005D  0AF1               	incf	isr@count2+1,f
   871     005E  3000               	movlw	0
   872     005F  07F1               	addwf	isr@count2+1,f
   873     0060  30E2               	movlw	226
   874     0061  0670               	xorwf	isr@count2,w
   875     0062  3004               	movlw	4
   876     0063  1903               	skipnz
   877     0064  0671               	xorwf	isr@count2+1,w
   878     0065  1D03               	btfss	3,2
   879     0066  2868               	goto	u6_21
   880     0067  2869               	goto	u6_20
   881     0068                     u6_21:
   882     0068  286D               	goto	i1l709
   883     0069                     u6_20:
   884     0069                     i1l705:
   885                           
   886                           ;isr.c: 34:         {;isr.c: 35:             count2 = 0;
   887     0069  01F0               	clrf	isr@count2
   888     006A  01F1               	clrf	isr@count2+1
   889     006B                     i1l707:
   890                           
   891                           ;isr.c: 36:             RD2 = !RD2;
   892     006B  3004               	movlw	4
   893     006C  0688               	xorwf	8,f
   894     006D                     i1l709:
   895                           
   896                           ;isr.c: 38:         TMR2IF = 0;
   897     006D  108C               	bcf	12,1	;volatile
   898     006E                     i1l103:
   899     006E  0877               	movf	??_isr+1,w
   900     006F  008A               	movwf	10
   901     0070  0E76               	swapf	??_isr,w
   902     0071  0083               	movwf	3
   903     0072  0EFE               	swapf	btemp,f
   904     0073  0E7E               	swapf	btemp,w
   905     0074  0009               	retfie
   906     0075                     __end_of_isr:
   907     007E                     btemp	set	126	;btemp
   908     007E                     wtemp0	set	126
   909                           
   910                           	psect	intentry
   911     0004                     __pintentry:	
   912                           ;incstack = 0
   913                           ; Regs used in _isr: [wreg+status,2+status,0]
   914                           
   915     0004                     interrupt_function:
   916     007E                     saved_w	set	btemp
   917     0004  00FE               	movwf	btemp
   918     0005  0E03               	swapf	3,w
   919     0006  00F6               	movwf	??_isr
   920     0007  080A               	movf	10,w
   921     0008  00F7               	movwf	??_isr+1
   922     0009  120A  118A  2819   	ljmp	_isr
   923                           
   924                           	psect	idloc
   925                           
   926                           ;Config register IDLOC0 @ 0x2000
   927                           ;	unspecified, using default values
   928     2000                     	org	8192
   929     2000  3FFF               	dw	16383
   930                           
   931                           ;Config register IDLOC1 @ 0x2001
   932                           ;	unspecified, using default values
   933     2001                     	org	8193
   934     2001  3FFF               	dw	16383
   935                           
   936                           ;Config register IDLOC2 @ 0x2002
   937                           ;	unspecified, using default values
   938     2002                     	org	8194
   939     2002  3FFF               	dw	16383
   940                           
   941                           ;Config register IDLOC3 @ 0x2003
   942                           ;	unspecified, using default values
   943     2003                     	org	8195
   944     2003  3FFF               	dw	16383
   945                           
   946                           	psect	config
   947                           
   948                           ;Config register CONFIG @ 0x2007
   949                           ;	Oscillator Selection bits
   950                           ;	FOSC = 0x3, unprogrammed default
   951                           ;	Watchdog Timer Enable bit
   952                           ;	WDTE = OFF, WDT disabled
   953                           ;	Power-up Timer Enable bit
   954                           ;	PWRTE = 0x1, unprogrammed default
   955                           ;	Brown-out Reset Enable bit
   956                           ;	BOREN = 0x1, unprogrammed default
   957                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   958                           ;	LVP = 0x1, unprogrammed default
   959                           ;	Data EEPROM Memory Code Protection bit
   960                           ;	CPD = 0x1, unprogrammed default
   961                           ;	Flash Program Memory Write Enable bits
   962                           ;	WRT = 0x3, unprogrammed default
   963                           ;	In-Circuit Debugger Mode bit
   964                           ;	DEBUG = 0x1, unprogrammed default
   965                           ;	Flash Program Memory Code Protection bit
   966                           ;	CP = 0x1, unprogrammed default
   967     2007                     	org	8199
   968     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                        _init_timer0
                        _init_timer1
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_timer0
     _init_timer1
     _init_timer2

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 21 17:27:30 2023

                     l22 00B9                       l23 00B9                       l17 008C  
                     l60 00B3                       l63 009C                       l66 00A9  
                    l651 00B2                      l661 0099                      l653 008D  
                    l647 00AA                      l655 0091                      l663 009D  
                    l671 007B                      l649 00AE                      l657 0095  
                    l665 00A4                      l673 0080                      l681 00B4  
                    l659 0096                      l667 00A6                      l675 0085  
                    l677 008A                      l669 0075                      l679 008B  
                    _GIE 005F                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _PR2 0092                      _PSA 040B  
                    _isr 0019                     ?_isr 0076                     _T0CS 040D  
                   _PEIE 005E                     i1l95 0037                     i1l98 0056  
                   _TMR0 0001                     u1_20 001D                     u1_21 001C  
                   u2_20 0031                     u2_21 0030                     u3_20 003D  
                   u3_21 003C                     u4_20 0050                     u4_21 004F  
                   u5_20 005A                     u5_21 0059                     u6_20 0069  
                   u6_21 0068                     _main 00B4                     btemp 007E  
                   start 000C                    ??_isr 0076                    ?_main 0076  
                  i1l103 006E                    i1l701 0054                    i1l703 005A  
                  i1l705 0069             ?_init_config 0076                    i1l707 006B  
                  i1l709 006D                    i1l691 0035                    i1l683 0019  
                  i1l693 003D                    i1l685 001D                    i1l695 0041  
                  i1l687 0031                    i1l697 0050                    i1l689 0033  
                  i1l699 0052                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTD 0008                    _TRISD 0088             ?_init_timer0 0076  
           ?_init_timer1 0076             ?_init_timer2 0076                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00BD                   ??_main 0078                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TMR1IE 0460                   _TMR1IF 0060  
                 _TMR1CS 0081                   _TMR2IE 0461                   _TMR2IF 0061  
                 _TMR1ON 0080                   _TMR2ON 0092                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0076               __pmaintext 00B4  
             __pintentry 0004                  _T1CKPS0 0084                  _T1CKPS1 0085  
                _T2CKPS0 0090                  _T2CKPS1 0091                  __ptext1 0075  
                __ptext2 009D                  __ptext3 008D                  __ptext4 00AA  
                __ptext5 0019     end_of_initialization 0015      start_initialization 000F  
            __end_of_isr 0075            ??_init_config 0078            ??_init_timer0 0078  
          ??_init_timer1 0078            ??_init_timer2 0078              __pbssCOMMON 0070  
              ___latbits 0002      __end_of_init_config 008D      __end_of_init_timer0 00B4  
    __end_of_init_timer1 009D      __end_of_init_timer2 00AA        interrupt_function 0004  
              isr@count0 0074                isr@count1 0072                isr@count2 0070  
            _init_config 0075              _init_timer0 00AA              _init_timer1 008D  
            _init_timer2 009D                 intlevel1 0000  

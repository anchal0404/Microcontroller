

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 21 13:25:55 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0000                     	;# 
   174     0001                     	;# 
   175     0002                     	;# 
   176     0003                     	;# 
   177     0004                     	;# 
   178     0005                     	;# 
   179     0006                     	;# 
   180     0007                     	;# 
   181     0008                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     000E                     	;# 
   189     000F                     	;# 
   190     0010                     	;# 
   191     0011                     	;# 
   192     0012                     	;# 
   193     0013                     	;# 
   194     0014                     	;# 
   195     0015                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     001D                     	;# 
   206     001E                     	;# 
   207     001F                     	;# 
   208     0081                     	;# 
   209     0085                     	;# 
   210     0086                     	;# 
   211     0087                     	;# 
   212     0088                     	;# 
   213     0089                     	;# 
   214     008C                     	;# 
   215     008D                     	;# 
   216     008E                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233                           
   234                           	psect	idataBANK0
   235     06D5                     __pidataBANK0:
   236                           
   237                           ;initializer for _digit
   238     06D5  343F               	retlw	63
   239     06D6  3406               	retlw	6
   240     06D7  345B               	retlw	91
   241     06D8  344F               	retlw	79
   242     06D9  3466               	retlw	102
   243     06DA  346D               	retlw	109
   244     06DB  347D               	retlw	125
   245     06DC  3407               	retlw	7
   246     06DD  347F               	retlw	127
   247     06DE  346F               	retlw	111
   248     06DF  3408               	retlw	8
   249     06E0  3408               	retlw	8
   250     0008                     _PORTD	set	8
   251     0005                     _PORTA	set	5
   252     0085                     _TRISA	set	133
   253     0088                     _TRISD	set	136
   254                           
   255                           	psect	cinit
   256     07EE                     start_initialization:	
   257                           ; #config settings
   258                           
   259     07EE                     __initialization:
   260                           
   261                           ; Initialize objects allocated to BANK0
   262     07EE  1383               	bcf	3,7	;select IRP bank0
   263     07EF  302C               	movlw	low (__pdataBANK0+12)
   264     07F0  00FD               	movwf	btemp+-1
   265     07F1  3006               	movlw	high __pidataBANK0
   266     07F2  00FE               	movwf	btemp
   267     07F3  30D5               	movlw	low __pidataBANK0
   268     07F4  00FF               	movwf	btemp+1
   269     07F5  3020               	movlw	low __pdataBANK0
   270     07F6  0084               	movwf	4
   271     07F7  120A  118A  26E5  120A  118A  	fcall	init_ram0
   272     07FC                     end_of_initialization:	
   273                           ;End of C runtime variable initialization code
   274                           
   275     07FC                     __end_of__initialization:
   276     07FC  0183               	clrf	3
   277     07FD  120A  118A  2F65   	ljmp	_main	;jump to C main() function
   278                           
   279                           	psect	dataBANK0
   280     0020                     __pdataBANK0:
   281     0020                     _digit:
   282     0020                     	ds	12
   283                           
   284                           	psect	inittext
   285     06E1                     init_fetch0:	
   286                           ;	Called with low address in FSR and high address in W
   287                           
   288     06E1  087E               	movf	btemp,w
   289     06E2  008A               	movwf	10
   290     06E3  087F               	movf	btemp+1,w
   291     06E4  0082               	movwf	2
   292     06E5                     init_ram0:	
   293                           ;Called with:
   294                           ;	high address of idata address in btemp 
   295                           ;	low address of idata address in btemp+1 
   296                           ;	low address of data in FSR
   297                           ;	high address + 1 of data in btemp-1
   298                           
   299     06E5  120A  118A  26E1  120A  118A  	fcall	init_fetch0
   300     06EA  0080               	movwf	0
   301     06EB  0A84               	incf	4,f
   302     06EC  0804               	movf	4,w
   303     06ED  067D               	xorwf	btemp+-1,w
   304     06EE  1903               	btfsc	3,2
   305     06EF  3400               	retlw	0
   306     06F0  0AFF               	incf	btemp+1,f
   307     06F1  1903               	btfsc	3,2
   308     06F2  0AFE               	incf	btemp,f
   309     06F3  2EE5               	goto	init_ram0
   310                           
   311                           	psect	cstackCOMMON
   312     0070                     __pcstackCOMMON:
   313     0070                     ?_init_ssd:
   314     0070                     ??_init_ssd:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?_display:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     ??_display:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ?_init_config:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ??_init_config:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?___lwmod:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ___lwmod@divisor:	
   336                           ; 2 bytes @ 0x0
   337                           
   338                           
   339                           ; 2 bytes @ 0x0
   340     0070                     	ds	1
   341     0071                     display@wait:
   342                           
   343                           ; 2 bytes @ 0x1
   344     0071                     	ds	1
   345     0072                     ___lwmod@dividend:
   346                           
   347                           ; 2 bytes @ 0x2
   348     0072                     	ds	1
   349     0073                     display@data:
   350                           
   351                           ; 1 bytes @ 0x3
   352     0073                     	ds	1
   353     0074                     ??___lwmod:
   354     0074                     display@digit:	
   355                           ; 1 bytes @ 0x4
   356                           
   357     0074                     ___lwmod@counter:	
   358                           ; 1 bytes @ 0x4
   359                           
   360                           
   361                           ; 1 bytes @ 0x4
   362     0074                     	ds	1
   363     0075                     ??_main:
   364                           
   365                           ; 1 bytes @ 0x5
   366     0075                     	ds	2
   367                           
   368                           	psect	cstackBANK0
   369     002C                     __pcstackBANK0:
   370     002C                     main@ssd:
   371                           
   372                           ; 4 bytes @ 0x0
   373     002C                     	ds	4
   374     0030                     main@delay:
   375                           
   376                           ; 2 bytes @ 0x4
   377     0030                     	ds	2
   378     0032                     main@i:
   379                           
   380                           ; 2 bytes @ 0x6
   381     0032                     	ds	2
   382                           
   383                           	psect	maintext
   384     0765                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 20 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  ssd             4    0[BANK0 ] unsigned char [4]
   395 ;;  i               2    6[BANK0 ] unsigned int 
   396 ;;  delay           2    4[BANK0 ] unsigned int 
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       8       0       0       0
   408 ;;      Temps:          2       0       0       0       0
   409 ;;      Totals:         2       8       0       0       0
   410 ;;Total ram usage:       10 bytes
   411 ;; Hardware stack levels required when called: 2
   412 ;; This function calls:
   413 ;;		___lwmod
   414 ;;		_display
   415 ;;		_init_config
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421     0765                     _main:	
   422                           ;psect for function _main
   423                           
   424     0765                     l700:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   427                           
   428                           
   429                           ;main.c: 21:         };main.c: 22: 
   430     0765  1283               	bcf	3,5	;RP0=0, select bank0
   431     0766  1303               	bcf	3,6	;RP1=0, select bank0
   432     0767  01B2               	clrf	main@i
   433     0768  01B3               	clrf	main@i+1
   434     0769  01B0               	clrf	main@delay
   435     076A  01B1               	clrf	main@delay+1
   436     076B                     l702:
   437                           
   438                           ;main.c: 23: 
   439     076B  120A  118A  26C3  120A  118A  	fcall	_init_config
   440     0770                     l704:
   441                           
   442                           ;main.c: 26:         ssd[2] = digit[(i+2)%12];
   443     0770  3001               	movlw	1
   444     0771  1283               	bcf	3,5	;RP0=0, select bank0
   445     0772  1303               	bcf	3,6	;RP1=0, select bank0
   446     0773  07B0               	addwf	main@delay,f
   447     0774  1803               	skipnc
   448     0775  0AB1               	incf	main@delay+1,f
   449     0776  3000               	movlw	0
   450     0777  07B1               	addwf	main@delay+1,f
   451     0778  3097               	movlw	151
   452     0779  0630               	xorwf	main@delay,w
   453     077A  0431               	iorwf	main@delay+1,w
   454     077B  1D03               	btfss	3,2
   455     077C  2F7E               	goto	u211
   456     077D  2F7F               	goto	u210
   457     077E                     u211:
   458     077E  2F93               	goto	l712
   459     077F                     u210:
   460     077F                     l706:
   461                           
   462                           ;main.c: 27:         ssd[3] = digit[(i+3)%12];;main.c: 28: 
   463     077F  01B0               	clrf	main@delay
   464     0780  01B1               	clrf	main@delay+1
   465     0781                     l708:
   466                           
   467                           ;main.c: 29:         display(ssd);
   468     0781  0833               	movf	main@i+1,w
   469     0782  00F6               	movwf	??_main+1
   470     0783  0832               	movf	main@i,w
   471     0784  00F5               	movwf	??_main
   472     0785  0AB2               	incf	main@i,f
   473     0786  1903               	skipnz
   474     0787  0AB3               	incf	main@i+1,f
   475     0788  3000               	movlw	0
   476     0789  0276               	subwf	??_main+1,w
   477     078A  300B               	movlw	11
   478     078B  1903               	skipnz
   479     078C  0275               	subwf	??_main,w
   480     078D  1C03               	skipc
   481     078E  2F90               	goto	u221
   482     078F  2F91               	goto	u220
   483     0790                     u221:
   484     0790  2F93               	goto	l712
   485     0791                     u220:
   486     0791                     l710:
   487                           
   488                           ;main.c: 30:     };main.c: 31:     return;
   489     0791  01B2               	clrf	main@i
   490     0792  01B3               	clrf	main@i+1
   491     0793                     l712:
   492     0793  0832               	movf	main@i,w
   493     0794  3E20               	addlw	(low (_digit| 0))& (0+255)
   494     0795  0084               	movwf	4
   495     0796  1383               	bcf	3,7	;select IRP bank0
   496     0797  0800               	movf	0,w
   497     0798  00AC               	movwf	main@ssd
   498     0799                     l714:
   499     0799  300C               	movlw	12
   500     079A  00F0               	movwf	___lwmod@divisor
   501     079B  3000               	movlw	0
   502     079C  00F1               	movwf	___lwmod@divisor+1
   503     079D  0832               	movf	main@i,w
   504     079E  3E01               	addlw	1
   505     079F  00F2               	movwf	___lwmod@dividend
   506     07A0  0833               	movf	main@i+1,w
   507     07A1  1803               	skipnc
   508     07A2  3E01               	addlw	1
   509     07A3  3E00               	addlw	0
   510     07A4  00F3               	movwf	___lwmod@dividend+1
   511     07A5  120A  118A  272B  120A  118A  	fcall	___lwmod
   512     07AA  0870               	movf	?___lwmod,w
   513     07AB  3E20               	addlw	(low (_digit| 0))& (0+255)
   514     07AC  0084               	movwf	4
   515     07AD  1383               	bcf	3,7	;select IRP bank0
   516     07AE  0800               	movf	0,w
   517     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   518     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   519     07B1  00AD               	movwf	main@ssd+1
   520     07B2                     l716:
   521     07B2  300C               	movlw	12
   522     07B3  00F0               	movwf	___lwmod@divisor
   523     07B4  3000               	movlw	0
   524     07B5  00F1               	movwf	___lwmod@divisor+1
   525     07B6  0832               	movf	main@i,w
   526     07B7  3E02               	addlw	2
   527     07B8  00F2               	movwf	___lwmod@dividend
   528     07B9  0833               	movf	main@i+1,w
   529     07BA  1803               	skipnc
   530     07BB  3E01               	addlw	1
   531     07BC  3E00               	addlw	0
   532     07BD  00F3               	movwf	___lwmod@dividend+1
   533     07BE  120A  118A  272B  120A  118A  	fcall	___lwmod
   534     07C3  0870               	movf	?___lwmod,w
   535     07C4  3E20               	addlw	(low (_digit| 0))& (0+255)
   536     07C5  0084               	movwf	4
   537     07C6  1383               	bcf	3,7	;select IRP bank0
   538     07C7  0800               	movf	0,w
   539     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   540     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   541     07CA  00AE               	movwf	main@ssd+2
   542     07CB                     l718:
   543     07CB  300C               	movlw	12
   544     07CC  00F0               	movwf	___lwmod@divisor
   545     07CD  3000               	movlw	0
   546     07CE  00F1               	movwf	___lwmod@divisor+1
   547     07CF  0832               	movf	main@i,w
   548     07D0  3E03               	addlw	3
   549     07D1  00F2               	movwf	___lwmod@dividend
   550     07D2  0833               	movf	main@i+1,w
   551     07D3  1803               	skipnc
   552     07D4  3E01               	addlw	1
   553     07D5  3E00               	addlw	0
   554     07D6  00F3               	movwf	___lwmod@dividend+1
   555     07D7  120A  118A  272B  120A  118A  	fcall	___lwmod
   556     07DC  0870               	movf	?___lwmod,w
   557     07DD  3E20               	addlw	(low (_digit| 0))& (0+255)
   558     07DE  0084               	movwf	4
   559     07DF  1383               	bcf	3,7	;select IRP bank0
   560     07E0  0800               	movf	0,w
   561     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   562     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   563     07E3  00AF               	movwf	main@ssd+3
   564     07E4                     l720:
   565     07E4  302C               	movlw	(low (main@ssd| 0))& (0+255)
   566     07E5  120A  118A  26F4  120A  118A  	fcall	_display
   567     07EA  2F70               	goto	l704
   568     07EB  120A  118A  2800   	ljmp	start
   569     07EE                     __end_of_main:
   570                           
   571                           	psect	text1
   572     06C3                     __ptext1:	
   573 ;; *************** function _init_config *****************
   574 ;; Defined at:
   575 ;;		line 16 in file "main.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0, pclath, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; Hardware stack levels required when called: 1
   596 ;; This function calls:
   597 ;;		_init_ssd
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603     06C3                     _init_config:	
   604                           ;psect for function _init_config
   605                           
   606     06C3                     l658:	
   607                           ;incstack = 0
   608                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   609                           
   610                           
   611                           ;main.c: 17:             if(i++ >= 11)
   612     06C3  120A  118A  26C9  120A  118A  	fcall	_init_ssd
   613     06C8                     l9:
   614     06C8  0008               	return
   615     06C9                     __end_of_init_config:
   616                           
   617                           	psect	text2
   618     06C9                     __ptext2:	
   619 ;; *************** function _init_ssd *****************
   620 ;; Defined at:
   621 ;;		line 4 in file "ssd.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_init_config
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648     06C9                     _init_ssd:	
   649                           ;psect for function _init_ssd
   650                           
   651     06C9                     l652:	
   652                           ;incstack = 0
   653                           ; Regs used in _init_ssd: [wreg+status,2]
   654                           
   655                           
   656                           ;ssd.c: 7:     TRISD = 0x00;
   657     06C9  1683               	bsf	3,5	;RP0=1, select bank1
   658     06CA  1303               	bcf	3,6	;RP1=0, select bank1
   659     06CB  0188               	clrf	8	;volatile
   660     06CC                     l654:
   661                           
   662                           ;ssd.c: 10:     TRISA = TRISA & 0xC3;
   663     06CC  0805               	movf	5,w	;volatile
   664     06CD  39C3               	andlw	195
   665     06CE  0085               	movwf	5	;volatile
   666     06CF                     l656:
   667                           
   668                           ;ssd.c: 12:     PORTA = PORTA & 0xC3;
   669     06CF  1283               	bcf	3,5	;RP0=0, select bank0
   670     06D0  1303               	bcf	3,6	;RP1=0, select bank0
   671     06D1  0805               	movf	5,w	;volatile
   672     06D2  39C3               	andlw	195
   673     06D3  0085               	movwf	5	;volatile
   674     06D4                     l30:
   675     06D4  0008               	return
   676     06D5                     __end_of_init_ssd:
   677                           
   678                           	psect	text3
   679     06F4                     __ptext3:	
   680 ;; *************** function _display *****************
   681 ;; Defined at:
   682 ;;		line 15 in file "ssd.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  data            1    wreg     PTR unsigned char 
   685 ;;		 -> main@ssd(4), 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  data            1    3[COMMON] PTR unsigned char 
   688 ;;		 -> main@ssd(4), 
   689 ;;  wait            2    1[COMMON] unsigned int 
   690 ;;  digit           1    4[COMMON] unsigned char 
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         4       0       0       0       0
   702 ;;      Temps:          1       0       0       0       0
   703 ;;      Totals:         5       0       0       0       0
   704 ;;Total ram usage:        5 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713     06F4                     _display:	
   714                           ;psect for function _display
   715                           
   716                           
   717                           ;incstack = 0
   718                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1]
   719                           ;display@data stored from wreg
   720     06F4  00F3               	movwf	display@data
   721     06F5                     l660:
   722                           
   723                           ;ssd.c: 15: void display(unsigned char data[]);ssd.c: 16: {;ssd.c: 17:     unsigned char
      +                           digit = 0;
   724     06F5  01F4               	clrf	display@digit
   725                           
   726                           ;ssd.c: 19:     for (digit = 0; digit < 4; digit++)
   727     06F6  01F4               	clrf	display@digit
   728     06F7                     l666:
   729                           
   730                           ;ssd.c: 20:     {;ssd.c: 21:         PORTD = data[digit];
   731     06F7  0874               	movf	display@digit,w
   732     06F8  0773               	addwf	display@data,w
   733     06F9  00F0               	movwf	??_display
   734     06FA  0870               	movf	??_display,w
   735     06FB  0084               	movwf	4
   736     06FC  1383               	bcf	3,7	;select IRP bank0
   737     06FD  0800               	movf	0,w
   738     06FE  1283               	bcf	3,5	;RP0=0, select bank0
   739     06FF  1303               	bcf	3,6	;RP1=0, select bank0
   740     0700  0088               	movwf	8	;volatile
   741     0701                     l668:
   742                           
   743                           ;ssd.c: 22:         PORTA = (unsigned char)((PORTA & 0xC3) | (0x04 << digit));
   744     0701  3004               	movlw	4
   745     0702  00F0               	movwf	??_display
   746     0703  0A74               	incf	display@digit,w
   747     0704  2F07               	goto	u124
   748     0705                     u125:
   749     0705  1003               	clrc
   750     0706  0DF0               	rlf	??_display,f
   751     0707                     u124:
   752     0707  3EFF               	addlw	-1
   753     0708  1D03               	skipz
   754     0709  2F05               	goto	u125
   755     070A  0805               	movf	5,w	;volatile
   756     070B  39C3               	andlw	195
   757     070C  0470               	iorwf	??_display,w
   758     070D  0085               	movwf	5	;volatile
   759     070E                     l670:
   760                           
   761                           ;ssd.c: 24:         for (unsigned int wait = 200; wait--; );
   762     070E  30C8               	movlw	200
   763     070F  00F1               	movwf	display@wait
   764     0710  3000               	movlw	0
   765     0711  00F2               	movwf	display@wait+1
   766     0712                     l672:
   767     0712  3001               	movlw	1
   768     0713  02F1               	subwf	display@wait,f
   769     0714  3000               	movlw	0
   770     0715  1C03               	skipc
   771     0716  03F2               	decf	display@wait+1,f
   772     0717  02F2               	subwf	display@wait+1,f
   773     0718  0A71               	incf	display@wait,w
   774     0719  1D03               	skipz
   775     071A  2F1F               	goto	u131
   776     071B  0A72               	incf	display@wait+1,w
   777     071C  1D03               	btfss	3,2
   778     071D  2F1F               	goto	u131
   779     071E  2F20               	goto	u130
   780     071F                     u131:
   781     071F  2F12               	goto	l672
   782     0720                     u130:
   783     0720                     l674:
   784                           
   785                           ;ssd.c: 25:     }
   786     0720  3001               	movlw	1
   787     0721  00FF               	movwf	btemp+1
   788     0722  087F               	movf	btemp+1,w
   789     0723  07F4               	addwf	display@digit,f
   790     0724                     l676:
   791     0724  3004               	movlw	4
   792     0725  0274               	subwf	display@digit,w
   793     0726  1C03               	skipc
   794     0727  2F29               	goto	u141
   795     0728  2F2A               	goto	u140
   796     0729                     u141:
   797     0729  2EF7               	goto	l666
   798     072A                     u140:
   799     072A                     l38:
   800     072A  0008               	return
   801     072B                     __end_of_display:
   802                           
   803                           	psect	text4
   804     072B                     __ptext4:	
   805 ;; *************** function ___lwmod *****************
   806 ;; Defined at:
   807 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  divisor         2    0[COMMON] unsigned int 
   810 ;;  dividend        2    2[COMMON] unsigned int 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  counter         1    4[COMMON] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2    0[COMMON] unsigned int 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, btemp+1
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         4       0       0       0       0
   823 ;;      Locals:         1       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0
   825 ;;      Totals:         5       0       0       0       0
   826 ;;Total ram usage:        5 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835     072B                     ___lwmod:	
   836                           ;psect for function ___lwmod
   837                           
   838     072B                     l678:	
   839                           ;incstack = 0
   840                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   841                           
   842     072B  0870               	movf	___lwmod@divisor,w
   843     072C  0471               	iorwf	___lwmod@divisor+1,w
   844     072D  1903               	btfsc	3,2
   845     072E  2F30               	goto	u151
   846     072F  2F31               	goto	u150
   847     0730                     u151:
   848     0730  2F60               	goto	l696
   849     0731                     u150:
   850     0731                     l680:
   851     0731  01F4               	clrf	___lwmod@counter
   852     0732  0AF4               	incf	___lwmod@counter,f
   853     0733  2F3F               	goto	l686
   854     0734                     l682:
   855     0734  3001               	movlw	1
   856     0735                     u165:
   857     0735  1003               	clrc
   858     0736  0DF0               	rlf	___lwmod@divisor,f
   859     0737  0DF1               	rlf	___lwmod@divisor+1,f
   860     0738  3EFF               	addlw	-1
   861     0739  1D03               	skipz
   862     073A  2F35               	goto	u165
   863     073B                     l684:
   864     073B  3001               	movlw	1
   865     073C  00FF               	movwf	btemp+1
   866     073D  087F               	movf	btemp+1,w
   867     073E  07F4               	addwf	___lwmod@counter,f
   868     073F                     l686:
   869     073F  1FF1               	btfss	___lwmod@divisor+1,7
   870     0740  2F42               	goto	u171
   871     0741  2F43               	goto	u170
   872     0742                     u171:
   873     0742  2F34               	goto	l682
   874     0743                     u170:
   875     0743                     l688:
   876     0743  0871               	movf	___lwmod@divisor+1,w
   877     0744  0273               	subwf	___lwmod@dividend+1,w
   878     0745  1D03               	skipz
   879     0746  2F49               	goto	u185
   880     0747  0870               	movf	___lwmod@divisor,w
   881     0748  0272               	subwf	___lwmod@dividend,w
   882     0749                     u185:
   883     0749  1C03               	skipc
   884     074A  2F4C               	goto	u181
   885     074B  2F4D               	goto	u180
   886     074C                     u181:
   887     074C  2F53               	goto	l692
   888     074D                     u180:
   889     074D                     l690:
   890     074D  0870               	movf	___lwmod@divisor,w
   891     074E  02F2               	subwf	___lwmod@dividend,f
   892     074F  0871               	movf	___lwmod@divisor+1,w
   893     0750  1C03               	skipc
   894     0751  03F3               	decf	___lwmod@dividend+1,f
   895     0752  02F3               	subwf	___lwmod@dividend+1,f
   896     0753                     l692:
   897     0753  3001               	movlw	1
   898     0754                     u195:
   899     0754  1003               	clrc
   900     0755  0CF1               	rrf	___lwmod@divisor+1,f
   901     0756  0CF0               	rrf	___lwmod@divisor,f
   902     0757  3EFF               	addlw	-1
   903     0758  1D03               	skipz
   904     0759  2F54               	goto	u195
   905     075A                     l694:
   906     075A  3001               	movlw	1
   907     075B  02F4               	subwf	___lwmod@counter,f
   908     075C  1D03               	btfss	3,2
   909     075D  2F5F               	goto	u201
   910     075E  2F60               	goto	u200
   911     075F                     u201:
   912     075F  2F43               	goto	l688
   913     0760                     u200:
   914     0760                     l696:
   915     0760  0873               	movf	___lwmod@dividend+1,w
   916     0761  00F1               	movwf	?___lwmod+1
   917     0762  0872               	movf	___lwmod@dividend,w
   918     0763  00F0               	movwf	?___lwmod
   919     0764                     l414:
   920     0764  0008               	return
   921     0765                     __end_of___lwmod:
   922     007E                     btemp	set	126	;btemp
   923     007E                     wtemp0	set	126
   924                           
   925                           	psect	idloc
   926                           
   927                           ;Config register IDLOC0 @ 0x2000
   928                           ;	unspecified, using default values
   929     2000                     	org	8192
   930     2000  3FFF               	dw	16383
   931                           
   932                           ;Config register IDLOC1 @ 0x2001
   933                           ;	unspecified, using default values
   934     2001                     	org	8193
   935     2001  3FFF               	dw	16383
   936                           
   937                           ;Config register IDLOC2 @ 0x2002
   938                           ;	unspecified, using default values
   939     2002                     	org	8194
   940     2002  3FFF               	dw	16383
   941                           
   942                           ;Config register IDLOC3 @ 0x2003
   943                           ;	unspecified, using default values
   944     2003                     	org	8195
   945     2003  3FFF               	dw	16383
   946                           
   947                           	psect	config
   948                           
   949                           ;Config register CONFIG @ 0x2007
   950                           ;	Oscillator Selection bits
   951                           ;	FOSC = 0x3, unprogrammed default
   952                           ;	Watchdog Timer Enable bit
   953                           ;	WDTE = OFF, WDT disabled
   954                           ;	Power-up Timer Enable bit
   955                           ;	PWRTE = 0x1, unprogrammed default
   956                           ;	Brown-out Reset Enable bit
   957                           ;	BOREN = 0x1, unprogrammed default
   958                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   959                           ;	LVP = 0x1, unprogrammed default
   960                           ;	Data EEPROM Memory Code Protection bit
   961                           ;	CPD = 0x1, unprogrammed default
   962                           ;	Flash Program Memory Write Enable bits
   963                           ;	WRT = 0x3, unprogrammed default
   964                           ;	In-Circuit Debugger Mode bit
   965                           ;	DEBUG = 0x1, unprogrammed default
   966                           ;	Flash Program Memory Code Protection bit
   967                           ;	CP = 0x1, unprogrammed default
   968     2007                     	org	8199
   969     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      8      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___lwmod
    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    1016
                                              5 COMMON     2     2      0
                                              0 BANK0      8     8      0
                            ___lwmod
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              5     5      0     169
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     615
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwmod
   _display
   _init_config
     _init_ssd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B      12        0.0%
ABS                  0      0      1B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 21 13:25:55 2023

                      l9 06C8                        pc 0002                       l30 06D4  
                     l38 072A                       fsr 0004                      l414 0764  
                    l700 0765                      l710 0791                      l702 076B  
                    l720 07E4                      l712 0793                      l704 0770  
                    l714 0799                      l706 077F                      l660 06F5  
                    l652 06C9                      l716 07B2                      l708 0781  
                    l670 070E                      l654 06CC                      l718 07CB  
                    l680 0731                      l672 0712                      l656 06CF  
                    l690 074D                      l682 0734                      l674 0720  
                    l666 06F7                      l658 06C3                      l692 0753  
                    l684 073B                      l676 0724                      l668 0701  
                    l694 075A                      l686 073F                      l678 072B  
                    l688 0743                      l696 0760                      u200 0760  
                    u201 075F                      u130 0720                      u210 077F  
                    u131 071F                      u211 077E                      u140 072A  
                    u124 0707                      u220 0791                      u141 0729  
                    u125 0705                      u221 0790                      u150 0731  
                    u151 0730                      u170 0743                      u171 0742  
                    u180 074D                      u181 074C                      u165 0735  
                    u185 0749                      u195 0754                      fsr0 0004  
                    indf 0000              display@data 0073              display@wait 0071  
                   _main 0765                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___lwmod 0765             ?_init_config 0070  
                  _PORTA 0005                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088             display@digit 0074          __end_of_display 072B  
                  _digit 0020                    main@i 0032                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0075                ??___lwmod 0074  
       __end_of_init_ssd 06D5                ??_display 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 06D5               __pmaintext 0765  
              ?_init_ssd 0070                  ___lwmod 072B                  __ptext1 06C3  
                __ptext2 06C9                  __ptext3 06F4                  __ptext4 072B  
                _display 06F4                  main@ssd 002C     end_of_initialization 07FC  
             ??_init_ssd 0070      start_initialization 07EE               init_fetch0 06E1  
            __pdataBANK0 0020            ??_init_config 0070                ___latbits 0002  
          __pcstackBANK0 002C                 ?___lwmod 0070                 ?_display 0070  
    __end_of_init_config 06C9                main@delay 0030              _init_config 06C3  
               _init_ssd 06C9                 init_ram0 06E5         ___lwmod@dividend 0072  
        ___lwmod@divisor 0070          ___lwmod@counter 0074  
